# version: 2.1
# jobs:
#   build:
#     docker:
#       - image: cimg/base:stable
#     steps:
#       - checkout
#       - run:
#           name: "Say hello"
#           command: "echo Hello, World!"
version: 2 # use CircleCI 2.0
jobs:
  build:
    working_directory: ~/circleci-demo-python-django
    docker:
      # - image: circleci/python:3.9 # 各ジョブで Docker Executor のイメージを定義する必要があり、後続のジョブでは別のイメージを定義できます
      #   environment:
      #     SECRET_KEY: django-insecure-g@ww%@j*fj+*p8se@*e9iqs9nnci0&5s)9e5)3^2ajoc^47hvu
      #     DEBUG: 0
      #     DATABASE_ENGINE: django.db.backends.mysql
      #     DATABASE_DB: circle_test
      #     DATABASE_USER: root
      #     DATABASE_PASSWORD: root
      #     DATABASE_HOST: localhost
      #     DATABASE_PORT: 3306
      #     CORS_ORIGIN_WHITELIST_ELEMENT: http://localhost:3000
      #     # PIPENV_VENV_IN_PROJECT: "true"
      #     # DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/mysql:5.7 # DockerHubにあるイメージのため、authする必要がある。
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD # context / project UI env-var reference
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_ROOT_HOST: "%"
          MYSQL_DATABASE: circle_test
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      # - run: sudo chown -R circleci:circleci /usr/local/bin
      # - run: sudo chown -R circleci:circleci /usr/local/lib/python3.9/site-packages
      # - run:
      #     command: |
      #       pip install --upgrade
      #       sudo pip install pipenv
      #       pipenv install
      # - run:
      #     command: |
      #       pipenv run python manage.py test
      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: MySQL が準備できるまで待機
          command: |
            for i in `seq 1 200`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: MySQL CLI のインストール; ダミー データのインポート; サンプル クエリの実行
          command: |
            sudo apt-get install default-mysql-client
            mysql -h 127.0.0.1 -u root -proot circle_test < sql-data/dummy.sql
            mysql -h 127.0.0.1 -u root -proot -execute="SELECT * FROM test_db.Persons"
