# CircleCI 2.1 を利用する
version: 2.1
jobs:
  build-and-test:
    docker:
      # 後続に記載するstepsを実行するメインとなるDockerコンテナを指定する
      - image: circleci/python:3.9
        environment:
          PYTHONUNBUFFERED: 1
          PYTHONDONTWRITEBYTECODE: 1
          SECRET_KEY: "django-insecure-g@ww%@j*fj+*p8se@*e9iqs9nnci0&5s)9e5)3^2ajoc^47hvu"
          DEBUG: 0
          DATABASE_ENGINE: "django.db.backends.mysql"
          DATABASE_DB: circle_test
          DATABASE_USER: root
          DATABASE_PASSWORD: root
          DATABASE_HOST: "127.0.0.1"
          DATABASE_PORT: 3306
          CORS_ORIGIN_WHITELIST_ELEMENT: http://localhost:3000
      # 上記のメインとなるDockerコンテナが依存するDockerコンテナを指定する(Databaseなど)
      - image: circleci/mysql:5.7
        command: |
          mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
        environment:
          MYSQL_DATABASE: circle_test
          MYSQL_ROOT_HOST: "%"
          MYSQL_ROOT_PASSWORD: root
    working_directory: ~/django
    steps:
      # リポジトリのコードを working_directory にチェックアウト
      - checkout # check out source code to working directory
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.9/site-packages
      - run:
          command: |
            sudo pip install --upgrade pip 
            pip install pipenv
            pipenv install --skip-lock --system --dev
      # dockerizeのインストール
      - run:
          name: install dockerize
          command: |
            [ ! -f /usr/local/bin/dockerize ] && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            true
          environment:
            DOCKERIZE_VERSION: v0.5.0
      # mysqlコンテナの起動待機
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      # デバックしてた頃のcommand
      # - run:
      #     command: |
      #       pip show django
      # - run:
      #     command: |
      #       export PYTHONPATH="/usr/local/lib/python3.9/site-packages"
      #       echo $PYTHONPATH
      # - run:
      #     command: |
      #       nc -z 127.0.0.1 3306
      - run:
          name: initialize db
          command: |
            python manage.py makemigrations
            python manage.py migrate
      - run:
          command: |
            python manage.py test

workflows:
  sample:
    jobs:
      - build-and-test
      - aws-ecr/build-and-push-image:
          requires:
            - build-and-test
          account-url: AWS_ECR_ACCOUNT_URL # 965398552090.dkr.ecr.ap-northeast-1.amazonaws.com
          region: AWS_DEFAULT_REGION # ap-northeast-1
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          path: .
          repo: "${AWS_ECR_REPO_NAME}" # simple-note-django
          tag: "${CIRCLE_SHA1}"
          filters:
            branches:
              only:
                - main
      - aws-eks/update-container-image:
          cluster-name: eks-from-eksctl
          container-image-updates: "django=${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO_NAME}:${CIRCLE_SHA1}"
          record: true
          resource-name: deployment.apps/django
          requires:
            - aws-ecr/build-and-push-image
          filters:
            branches:
              only:
                - main
