# CircleCI 2.0 を利用する
version: 2
jobs:
  build:
    # Dockerコンテナを利用する
    docker:
      # 後続に記載するstepsを実行するメインとなるDockerコンテナを指定する
      - image: circleci/python:3.9
      # 上記のメインとなるDockerコンテナが依存するDockerコンテナを指定する(Databaseなど)
      - image: circleci/mysql:5.7
        command: |
          mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
        environment:
          MYSQL_DATABASE: circle_test
          MYSQL_ROOT_HOST: "%"
          MYSQL_ALLOW_EMPTY_PASSWORD: yes

    working_directory: ~/repo

    steps:
      # リポジトリのコードを working_directory にチェックアウト
      - checkout

      # dockerizeのインストール
      - run:
          name: install dockerize
          command: |
            [ ! -f /usr/local/bin/dockerize ] && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            true
          environment:
            DOCKERIZE_VERSION: v0.5.0

      # mysqlコンテナの起動待機
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: echo
          command: echo "hello world"
      # # データベースのテーブルの作成などの初期化(データベースはコンテナ初期化時に作成される)
      # - run:
      #     name: initialize db
      #     command: |
      #       . venv/bin/activate
      #       python manage.py makemigrations --settings mysite.settings.ci
      #       python manage.py migrate        --settings mysite.settings.ci

      # # テストの実行
      # - run:
      #     name: run tests
      #     command: |
      #       . venv/bin/activate
      #       python manage.py test --settings mysite.settings.ci
