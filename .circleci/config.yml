# CircleCI 2.0 を利用する
version: 2
jobs:
  build:
    # Dockerコンテナを利用する
    docker:
      # 後続に記載するstepsを実行するメインとなるDockerコンテナを指定する
      - image: circleci/python:3.9
        environment:
          PYTHONUNBUFFERED: 1
          PYTHONDONTWRITEBYTECODE: 1
          SECRET_KEY: "django-insecure-g@ww%@j*fj+*p8se@*e9iqs9nnci0&5s)9e5)3^2ajoc^47hvu"
          DEBUG: 0
          DATABASE_ENGINE: "django.db.backends.mysql"
          DATABASE_DB: circle_test
          DATABASE_USER: root
          DATABASE_PASSWORD: root
          DATABASE_HOST: localhost
          DATABASE_PORT: 3306
          CORS_ORIGIN_WHITELIST_ELEMENT: http://localhost:3000
      # 上記のメインとなるDockerコンテナが依存するDockerコンテナを指定する(Databaseなど)
      - image: circleci/mysql:5.7
        command: |
          mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
        environment:
          MYSQL_DATABASE: circle_test
          MYSQL_ROOT_HOST: "%"
          MYSQL_ROOT_PASSWORD: root

    working_directory: ~/django

    steps:
      # リポジトリのコードを working_directory にチェックアウト
      - checkout # check out source code to working directory
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.9/site-packages
      - run:
          command: |
            sudo pip install --upgrade pip 
            pip install pipenv
            pipenv install --skip-lock --system --dev
      # dockerizeのインストール
      - run:
          name: install dockerize
          command: |
            [ ! -f /usr/local/bin/dockerize ] && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            true
          environment:
            DOCKERIZE_VERSION: v0.5.0
      # mysqlコンテナの起動待機
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          command: |
            pip show django
      - run:
          command: |
            export PYTHONPATH="/usr/local/lib/python3.9/site-packages"
            echo $PYTHONPATH
      # データベースのテーブルの作成などの初期化(データベースはコンテナ初期化時に作成される)
      - run:
          name: initialize db
          command: |
            python manage.py makemigrations
            python manage.py migrate
      - run:
          command: |
            pipenv run python manage.py test
      # - run:
      #     name: initialize db
      #     command: |
      #       python manage.py makemigrations
      #       python manage.py migrate
      # # テストの実行
      # - run:
      #     name: run tests
      #     command: |
      #       python manage.py test
